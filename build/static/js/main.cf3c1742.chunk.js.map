{"version":3,"sources":["Components/Card.js","Components/Header.js","Components/DashBoard.js","App.js","serviceWorker.js","index.js"],"names":["Card","className","this","props","Data","local_new_cases","aria-hidden","local_total_cases","local_recovered","local_deaths","global_new_cases","global_total_cases","global_recovered","global_deaths","href","Component","Header","update_date_time","DashBoard","state","DataArry","Loding","Axios","get","then","response","CData","data","setState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf3c1742.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './../CSS/Card.css'\n\nclass Card extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"container fontstyle \">\n                    <div>\n                        <h2 className=\"srilanka\">LOCAL</h2>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-blue\">\n                                <div className=\"inner\">\n                                    <h3> {this.props.Data.local_new_cases} </h3>\n                                   <b> <p> LOCAL NEW CASE </p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-orange\">\n                                <div className=\"inner\">\n                                 <b>   <h3>{this.props.Data.local_total_cases} </h3>\n                                 <p> LOCAL TOTAL CASE </p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-money\" aria-hidden=\"true\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-green \">\n                                <div className=\"inner\">\n                                    <b><h3>{this.props.Data.local_recovered}  </h3>\n                                    <p> LOCAL RECOVERED</p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-red\">\n                                <div className=\"inner\">\n                                 <b> <h3> {this.props.Data.local_deaths} </h3>\n                                    <p> LOCAL DEATHS </p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-users\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <h2 className=\"srilanka\">GLOBAL</h2>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-blue\">\n                                <div className=\"inner\">\n                                    <h3> {this.props.Data.global_new_cases} </h3>\n                                    <b> <p> GLOBAL NEW CASE </p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-orange\">\n                                <div className=\"inner\">\n                                    <b>   <h3>{this.props.Data.global_total_cases} </h3>\n                                        <p> GLOBAL TOTAL CASE </p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-money\" aria-hidden=\"true\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-green \">\n                                <div className=\"inner\">\n                                    <b><h3>{this.props.Data.global_recovered}  </h3>\n                                        <p> GLOBAL RECOVERED</p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"col-lg-3 col-sm-6\">\n                            <div className=\"card-box bg-red\">\n                                <div className=\"inner\">\n                                    <b> <h3> {this.props.Data.global_deaths} </h3>\n                                        <p> GLOBAL DEATHS </p></b>\n                                </div>\n                                <div className=\"icon\">\n                                    <i className=\"fa fa-users\"></i>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <hr className=\"new5\"/>\n                <div className=\"footer-copyright text-center py-3 foot\">Â© 2020 Copyright:\n                    <a href=\"\"> J.Vivek</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, {Component} from 'react';\nimport './../CSS/Header.css'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <header className=\"tc pv4 pv5-ns  header \">\n\n                        <h1 className=\"f5 f4-ns fw6 mid-gray headtext\">COVID-19 DASHBOARD</h1>\n                         <h3 className=\"f5 f4-ns fw6 mid-gray \">{this.props.Data.update_date_time}</h3>\n                    <hr className=\"new5\"/>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport Axios from \"axios\";\nimport Card from \"./Card\";\nimport Header from \"./Header\";\nimport \"./../CSS/DashBoard.css\"\n\nclass DashBoard extends Component {\n\n    constructor() {\n        super();\n        this.state ={\n            DataArry:[],\n            Loding :true\n        }\n    }\n\n    async componentDidMount() {\n\n        const url = \"https://www.hpb.health.gov.lk/api/get-current-statistical\"\n        Axios.get(url)\n            .then(response =>{\n          const CData = response.data.data\n                this.setState({\n                    DataArry:CData,\n                    Loding:false\n                })\n\n            })\n\n    }\n\n    render() {\n        return (\n\n            <div>\n\n                <Header Data={this.state.DataArry}/>\n                {this.state.Loding ? <h1 className=\"loading\">Loding.....</h1>: <Card Data={this.state.DataArry}/>}\n\n            </div>\n        );\n    }\n}\n\nexport default DashBoard;\n","import React from 'react';\nimport './App.css';\nimport DashBoard from \"./Components/DashBoard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DashBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}